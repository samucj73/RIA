import streamlit as st
import json
import os
from fetch_and_save import fetch_latest_result, salvar_resultado_em_arquivo
from roleta_ia import RoletaIA

HISTORICO_PATH = "historico_resultados.json"

st.set_page_config(page_title="Roleta IA", layout="wide")
st.title("üéØ Previs√£o Inteligente de Roleta")

# Inicializar hist√≥rico
if "historico" not in st.session_state:
    if os.path.exists(HISTORICO_PATH):
        with open(HISTORICO_PATH, "r") as f:
            st.session_state.historico = json.load(f)
    else:
        st.session_state.historico = []

# Capturar resultado mais recente da API
resultado = fetch_latest_result()
ultimo_timestamp = (
    st.session_state.historico[-1]["timestamp"] if st.session_state.historico else None
)

# Se chegou novo resultado, adiciona ao hist√≥rico e para execu√ß√£o para for√ßar rerun
if resultado and resultado["timestamp"] != ultimo_timestamp:
    novo_resultado = {
        "number": resultado["number"],
        "color": resultado["color"],
        "timestamp": resultado["timestamp"],
        "lucky_numbers": resultado["lucky_numbers"]
    }
    st.session_state.historico.append(novo_resultado)
    salvar_resultado_em_arquivo([novo_resultado])
    st.experimental_rerun()
    st.stop()  # ‚õîÔ∏è Impede renderiza√ß√£o com dados desatualizados

# Exibir √∫ltimos sorteios
st.subheader("üßæ √öltimos Sorteios (n√∫meros)")
st.write([h["number"] for h in st.session_state.historico[-10:]])

# Exibir timestamp
if st.session_state.historico:
    ultimo = st.session_state.historico[-1]
    st.caption(f"‚è∞ √öltimo sorteio registrado: {ultimo['timestamp']}")

# Previs√£o com IA
st.subheader("üîÆ Previs√£o de Pr√≥ximos 4 N√∫meros Mais Prov√°veis")
ia = RoletaIA()
previsoes = ia.prever_numeros(st.session_state.historico)

if previsoes:
    st.success(f"N√∫meros Prov√°veis: {previsoes}")
else:
    st.warning("Aguardando pelo menos 20 sorteios v√°lidos para iniciar previs√µes.")

# Hist√≥rico completo
with st.expander("üìú Ver hist√≥rico completo"):
    st.json(st.session_state.historico)

# Rodap√©
st.markdown("---")
st.caption("üîÅ Atualiza√ß√£o autom√°tica instant√¢nea sempre que novo n√∫mero for sorteado.")
st.caption("ü§ñ Desenvolvido com aprendizado de m√°quina online via `SGDClassifier`.")
